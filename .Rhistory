z*2 + 1000
my_
my_div
1:20
pi:10
51:1
15:1
?':'
seq(1,20)
seq(1,20,by=0.5)
seq(0,10,by=0.5)
my_seq <- seq(5,10, length=30)
length(my_seq)
seq(1:length(my_seq))
1:length(my_seq)
seq(along.with = my_seq)
seq_along( my_seq)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
num_vect <- c(0.5,55,-10,6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My","name","is")
my_char
paste( my_char, collapse="")
paste( my_char, collapse=" ")
c(my_char,"Rahul")
my_name <- c(my_char,"Rahul")
my_name
paste(my_name,collapse=" ")
paste("Hello","world!",sep=" ")
paste(1:3,c("X","Y","Z"),sep="")
paste(LETTERS,1:4,sep="-")
x <- c(44,NA,5,NA)
x*3
y <- rnorm(10)
y
y <- rnorm(1000)
z <- rep(NA,1000)
my_data <- sample( c(y,z),100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf/Inf
Inf - Inf
x
x[1:10]
is.na(x)
x[is.na(x)]
y <- x[!is.na(x)]
y
y>0
y[y>0]
x > 0
x [ x > 0 ]
x [ !is.na(x) & x > 0 ]
c(x[1:10],1:10)
c(3,5,7)
x[c(3,5,7)]
x[0]
x[300]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c( foo=11, bar=2, norf =NA )
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2)<-names(vect)
names(vect2)<- c("foo","bar","norf")
identitical(vect,vect2)
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
my_vector
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20,4,5 )
identical(matrix, matrix2)
identical(matrix, my_matrix2)
identical(my_matrix, my_matrix2)
patients <- ("Bill","Gina","Kelly","Sean")
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data <-data.frame(patients,my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colname(cname, my_matrix)
colnames(cname, my_matrix)
colnames(cnames, my_matrix)
colnames(my_matrix,cnames)
cnames
colnames(my_data) <- cnames
my_data
TRUE == TRUE
FALSE == TRUE
(FALSE == TRUE)== TRUE
(FALSE == TRUE)== FALSE
9 == &
6 == 7
6 < 7
10 < 10
10 <= 10
5 ! = 7
5 != 7
TRUE
!TRUE
!FALSE
!( 5 == 7 )
( 5 != 7 )
! 5 == 7
FALSE & FALSE
TRUE & c(TRUE,FALSE,FALSE)
TRUE && c(TRUE,FALSE,FALSE)
TRUE & c(TRUE,FALSE,FALSE)
TRUE && c(FALSE, TRUE, TRUE)
TRUE | c(TRUE,FALSE,FALSE)
TRUE || c(TRUE,FALSE,FALSE)
5>8 || 6!=8 && 4>3.9
isTRUE(6>4)
identical('twins','twins')
xor(5==6,!FALSE)
ints <- sample(10)
ints
ints > 5
which( ints > 7)
any( ints < 0 )
all( ints > 0 )
flags
head(flags)
dim(flags)
viewinfo(flags)
viewinfo()
class(flags)
cls_list <- lapply( flags, class )
cls_list
class(cls_list)
as.characters(cls_list)
as.character(cls_list)
?sapply
sapply(cls_list,class)
sapply(flags,class)
cls_vect <- sapply(flags,class)
cls_vect
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lappaly(flag_colors,sum)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,3,5,5,6,6,5))
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags,unique())
unique_vals <- lapply(flags,unique)
unique_vals
unique_vals <- sapply(flags,unique)
length(unique_vals)
sapply(unique_vals,lenght)
sapply(unique_vals,length)
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals,function(elem),elem[2])
lapply(unique_vals,function(elem)elem[2])
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population,flags$red,summary)
tapply(flags$population,summary)
tapply(flags$population,flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrows(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str()
str(plants)
?sample
sample(1:6,4,replace = TRUE)
sample(1:6,4,replace = TRUE)
sample(1:20,10,replace = TRUE)
sample(1:20,10,replace = FALSE)
sample(1:20,10,replace = TRUE)
sample(1:20,10,replace=FALSE)
sample(1:20,10)
LETTERS
sample(LETTERS)
flips <- sample( c(0,1),100,replace=TRUE,c(0.3,0.7))
flips
flips <- sample( c("Heads","Tails"),100,replace=TRUE,c(0.3,0.7))
flips
sum(flips)
?rbinom
rbinom(1,size=100,prob=0.7)
flips <- rbinom(1,size=100,prob=0.7)
flips2 <- rbinom(1,size=100,prob=0.7)
flips2 <- rbinom(n=100,size=1,prob=0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
mean(rnorm(10))
rnorm(mean=100,sd=25)
rnorm(10,mean=100,sd=25)
rpois(5,mean=10)
rpois(5)
rpois(5,lambda=10)
rpois(5,10)
replicate(100,rpois(5,10))
my_pois <- replicate(100,rpois(5,10))
my_pois
colMeans(my_pois)
cm <- colMeans(my_pois)
hist(cm)
d1 <-Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
Sys.time()
t1 <- Sys.time()
t1
class(t1)
uncalss(t1)
unclass(t1)
t2 < as.POSIXlt(Sys.time())
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
t1
unclass(t2)
unclass(t1)
str(unclass(t2))
t2$min
d1$weekday()
weekday(d1)
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
t3
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(),t1,units = 'days')
q()
class(x <- 4)
class(x <- c(4, TRUE))
c(4,TRUE)
dim(c(4,TRUE))
x
x+1
x <- c(1,3, 5) 
y <- c(3, 2, 10)
rbind(x, y)
class(rbind(x, y))
?vector
 x <- list(2, "a", "b", TRUE)
x[[1]]
x[[2]]
x[2]
class(x[2])
class(x[[2]])
class(x[[1]])
class(x[1])
x <- 1:4
y <- 2:3
x + y
class(x + y)
 x <- c(3, 5, 1, 10, 12, 6)
y = x
x[x < 6] <- 0
x
hw1_data
pwd()
pwd
dir()
hw <- hw1_data.csv
dat = read.csv("hw1_data.csv", header = TRUE)
dat
colNames(dat)
names(dat)
dat[1:2,:]
head(dat,2)
tail(dat,2)
dat(47)
dat[47]
dat[[47]]
dat[[47,:]]
dat(row=47)
dat(:)
class(dat)
dat[47][:]
dat[47][,]
dat[47]["Ozone"]
dat[]["Ozone"]
dat[47]["Ozone"]
dat[47,"Ozone"]
dat[47,"Ozone"] == NA
x <- dat[47,"Ozone"]
x == NA
count(x,NA)
is.NA(x)
is.na(x)
is.na(dat$Ozone)
length(is.na(dat$Ozone))
sum(is.na(dat$Ozone))
y <- x(!is.na(dat$Ozone))
y <- !is.na(dat$Ozone)
y
y <- x[!is.na(dat$Ozone)]
y
y <- x[is.na(dat$Ozone)]
y
x
y <- dat$Ozone[!is.na(dat$Ozone)]
y
mean(y)
y <- dat[ dat$Ozone > 31 & dat$Temp > 90 ]
y <- dat[ (dat$Ozone > 31) & (dat$Temp > 90) ]
y <- dat[ (dat$Ozone > 31 & dat$Temp > 90) ]
y <- subset(dat, (dat$Ozone > 31 & dat$Temp > 90) )
y
mean(y$Solar.R)
y <- subset(dat, (dat$Month == 8) )
y
mean(y$Temp)
y <- subset(dat, (dat$Month == 6) )
y
mean(y$Temp)
y <- subset(dat, (dat$Month == 5) )
max(y$Ozone)
y
y <- dat[!is.na(dat$Ozone)]
y <- dat[!is.na(dat$Ozone)]
y <- dat[!is.na(dat$Ozone),]
y
y <- subset(y, y$Month==5 )
y
max(y$Ozone)
q()
swirl()
swirl
install.packages("swirl")
install.packages("swirl")
swirl()
swirl
swirl()
q()
ls()
?function
?
?sd
sd(1:2)
sd(1:2) ^ 2
args(sd)
args(mean)
args(lm)
>plotting
?lotting
?plotting
f <- function( a, b=1,c=2,d=NULL)
 {
 }
f <- function(a,b)
 {
  a^2
 }
f(2)
f(2,3)
f <- function(a,b)
 {
  b^2
 }
f(2)
f(2,2)
f <- function(a,b)
 {
  print (a)
  print (b)
 }
f(10)
f(10,10)
?...
?paste
search()
.GlobalEnv
.package
package
environment
make.power <- function(n)
 {
  pow <- function(x)
   {
      x^n
   }
  pow
 }
pow(1)
make.power.pow
cube <- make.power(3)
quad <- make.power(4)
cube()
cube(2)
ls(cube)
ls(environment( cube))
ls(environment( quad))
get("n",environment(cube))
get("n",environment(quad))
y <- 10
f <- function(x)
 {
   y<-2
   y^2 + g(x)
 }
g <- function(x)
 {
  x*y
 }
f(3)
?optim
?nlm
?optimize
?traceback
?debugger
?profiler
?profile
?date
date
time
date()
time()
weekdays
weekdays()
d <- date()
weekdays(d)
Sys.time()
p <- as.POSIXlt(Sys.time)
p <- as.POSIXlt(Sys.time())
name(p)
name(unclass(p))
names(unclass(p))
p$sec
?strptime
?<<
?<<-
x <- matrix(1:25,5,5)
x
solve(x)
x <- matrix(random(25),5,5)
?prand
x <- matrix(c(1,2,5,9),5,5)
x <- matrix(c(1,2,5,9),2,2)
x
solve(x)
xin <- solve(x)
x % * % xin
x %*% xin
determinant(x)
determinant.matrix(x)
x
source("cachematrix.R")
x
makeCacheMatrix(x)
makeCacheMatrix(x)
source("cachematrix.R")
makeCacheMatrix(x)
cacheSolve(x)
environment()
ls()
source("cachematrix.R")
makeCacheMatrix(x)
cacheSolve(x)
q()
